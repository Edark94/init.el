import cv2 as cv
import numpy as np
import math
import matplotlib.pyplot as plt
from sklearn import metrics
import sys
import glob
import copy

def processText():
    with open('SamplesForROC.txt', 'r') as f:
        data = f.readlines() # read raw lines into an array
    
    cleaned_matrix = [] 
    for raw_line in data:
        split_line = raw_line.strip().split(",") # ["1", "0" ... ]
        nums_ls = [float(x.replace('"', '')) for x in split_line] # get rid of the quotation marks and convert to int
        cleaned_matrix.append(nums_ls)
    return cleaned_matrix
    
def main():
    matrix = processText()
    valuesA = np.zeros(len(matrix))
    valuesB = np.zeros(len(matrix))
    classifier = matrix[:,2]
    for row in range(len(matrix)):
        x = matrix[row][0]
        y = matrix[row][1]
        valuesA[row] = math.sqrt(x**2+y**2)
        valuesB[row] = x + y
            
    fprA, tprA, thresholdsA = metrics.roc_curve(classifier, valuesA, pos_label=1)
    fprB, tprB, thresholdsB = metrics.roc_curve(classifier, valuesB, pos_label=1
    roc_aucA = metrics.auc(fprA, tprA)
                                                
    print (roc_auc)
                                                
    plt.title('Receiver Operating Characteristic')
    plt.plot(fpr, tpr, 'b', label = 'AUC = %0.2f' % roc_auc)
    plt.legend(loc = 'lower right')
    plt.plot([0, 1], [0, 1],'r--')
    #plt.xlim([0, 1])
    #plt.ylim([0, 1])
    plt.ylabel('True Positive Rate')
    plt.xlabel('False Positive Rate')
    plt.show()
    print(classifier)
    print(fpr)
    print(tpr)
main()
